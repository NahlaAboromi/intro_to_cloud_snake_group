# -*- coding: utf-8 -*-
"""targol_week_7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11mvZU88Q8nD5v3yJDi3EeUuDJ_iMhGqO
"""

!pip install requests beautifulsoup4
!pip install firebase

import requests
from bs4 import BeautifulSoup
import matplotlib.pyplot as plt
from firebase import firebase
def remove_stop_words(index):
  stop_words = {'a', 'an', 'the', 'and', 'or','in', 'on', 'at'}
  for stop_word in stop_words:
    if stop_word in index:
      del index[stop_word]
  return index

from nltk.stem import PorterStemmer
def apply_stemming(index):
  stemmer = PorterStemmer()
  stemmed_index = {}
  for word, count in index.items():
    stemmed_word = stemmer.stem(word)
    if stemmed_word in stemmed_index:
      stemmed_index[stemmed_word] += count
    else:
      stemmed_index[stemmed_word] = count
  return stemmed_index

import re
def index_words(soup):
  index = {}
  words = re.findall(r'\w+', soup.get_text())
  for word in words:
    word = word.lower()
    if word in index:
      index[word] += 1
    else:
      index[word] = 1
  return index

def fetch_page(url):
 response = requests.get(url)
 if response.status_code == 200:
  soup = BeautifulSoup(response.text, 'html.parser')
  return soup
 else:
  return None


FBconn = firebase.FirebaseApplication('https://targolweek7-default-rtdb.firebaseio.com/', None)
url = "https://w3.braude.ac.il/new-student/flyer2022/online/station/"
keywords = ["Preparatory","Registration","Engineer","Courses","Campus","Industry","Classes","Services","Engineering","Braude"]
soup = fetch_page(url)
if soup:
    index = index_words(soup)
    keyword_index = {}
    for word in keywords:
        keyword_index[word] = index.get(word.lower(), 0)
    FBconn.put('/', 'KeywordIndex', keyword_index)
    print(keyword_index)


data = FBconn.get('/KeywordIndex', None)

if data:
    print("✔️ Data retrieved from Firebase:")
    print(data)
else:
    print("❌ Failed to retrieve data")

# ציור גרף ברים
if data:
    words = list(data.keys())
    counts = list(data.values())

    plt.figure(figsize=(10, 6))
    plt.bar(words, counts, color='skyblue')
    plt.xlabel("Keyword")
    plt.ylabel("Frequency")
    plt.title("Keyword Frequencies in Braude Page")
    plt.xticks(rotation=45)
    plt.tight_layout()
    plt.show()